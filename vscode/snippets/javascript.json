{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"styled tag": {
		"prefix": "styledTag",
		"body": [
			"const ${1:StyledComp} = styled.${2:div}`",
			"	$0",
			"`;"
		]
	},
	"styled component": {
		"prefix": "styledExtend",
		"body": [
			"const ${1:StyledComp} = styled(${2:Component})`",
			"	$0",
			"`;"
		]
	},
	"recompose withState": {
		"prefix": "withState",
		"body": [
			"withState('${1:prop}', '${2:setProp}'$0),",
		],
		"description": "creates recompose withState"
	},
	"recompose handler": {
		"prefix": "handler",
		"body": [
			"${1:yourHandler}: ({ ${2:someProp} }) => (${3:val}) => {",
			"	$0",
			"}",
		],
		"description": "creates recompose handler"
	},
	"recompose withHandlers": {
		"prefix": "withHandlers",
		"body": [
			"withHandlers({",
			"	${1:yourHandler}: ({ ${2:someProp} }) => (${3:val}) => {",
			"		$0",
			"	}",
			"}),"
		],
		"description": "creates recompose withHandlers"
	}
}